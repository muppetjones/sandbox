name: Python Package

on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      package:
        required: true
        type: choice
        description: Package name
        options:
          - sx-check
          - sx-math
jobs:
  test:
    name: ${{ inputs.package }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        os: [ubuntu-latest]
    defaults:
      run:
        working-directory: ./${{ inputs.package }}
    steps:
    - uses: actions/checkout@8b5e8b768746b50394015010d25e690bfab9dfbc
    - name: Set up PDM
      uses: pdm-project/setup-pdm@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: true
        cache-dependency-path: '${{ inputs.package }}/pdm.lock'
        update-python: true
    - name: Install dependencies
      run: |
        pdm sync --dev -v --no-self
    - name: Lint
      uses: chartboost/ruff-action@v1
    # - name: Lint
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test
      run: |
        pdm test --junitxml=junit/${{ inputs.package }}-${{ matrix.python-version }}.xml
    - name: Upload pytest test results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
  build:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ./${{ inputs.package }}
    steps:
      - uses: actions/checkout@main
        with:
          fetch-tags: true
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install pypa/build
        run: >-
          python -m pip install build --user
      - name: Build wheel and sdist
        run: >-
          python -m build --sdist --wheel --outdir dist/ .
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.package }}-${{ matrix.os }}.whl
          path: dist/${{ inputs.package }}-${{ matrix.os }}.whl