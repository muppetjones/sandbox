name: Python Package

on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      package:
        required: true
        type: choice
        description: Package name
        options:
          - sx-check
          - sx-math

defaults:
  run:
    shell: bash

jobs:
  test:
    name: "${{ matrix.os }}:${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        os: ["ubuntu-latest"]
    defaults:
      run:
        working-directory: ./${{ inputs.package }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up PDM
      uses: pdm-project/setup-pdm@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: true
        cache-dependency-path: '${{ inputs.package }}/pdm.lock'
        update-python: true
    - name: Install dependencies
      run: |
        pdm sync --dev -v --no-self
    - name: Lint
      uses: chartboost/ruff-action@v1
    - name: Test
      run: |
        pdm test --junitxml=junit/${{ inputs.package }}-${{ matrix.python-version }}.xml
    - name: Upload pytest test results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results-${{ inputs.package }}-${{ matrix.python-version }}.xml
        # does NOT use working-directory
        path: ${{ inputs.package }}/junit/${{ inputs.package }}-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
  build:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ./${{ inputs.package }}
    if: |
      ${{ github.event_name == 'push'
          || (github.event_name == 'pull_request'
              && (startsWith(github.head_ref, 'release/')
                  && startsWith(github.head_ref, 'hotfix/')
              )  ) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install pypa/build
        run: >-
          python -m pip install build --user'
      - name: Build wheel
        run: >-
          python -m build --sdist --wheel --outdir dist/ .
      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: "${{ inputs.package }}-${{ matrix.os }}.whl"
          path: ${{ inputs.package }}/dist/*
          if-no-files-found: error